[{"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\index.tsx":"1","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\reportWebVitals.ts":"2","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\history.ts":"3","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\CategoriesPage\\Categories.tsx":"4","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\index.ts":"5","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\actions.ts":"6","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Header.tsx":"7","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\reducers.ts":"8","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\types.ts":"9","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\HomePage\\Home.tsx":"10","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\Locations.tsx":"11","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Footer\\Footer.tsx":"12","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\AddCategory.tsx":"13","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\EditCategory.tsx":"14","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\DeleteCategory.tsx":"15","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\ViewCategory.tsx":"16","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\AddLocation.tsx":"17","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\DeleteLocation.tsx":"18","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\EditLocation.tsx":"19","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocation.tsx":"20","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocationOnGoogleMaps.tsx":"21","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\components\\LocationsActions.tsx":"22","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\index.tsx":"23","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\reportWebVitals.ts":"24","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\history.ts":"25","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\HomePage\\Home.tsx":"26","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\Locations.tsx":"27","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\CategoriesPage\\Categories.tsx":"28","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\index.ts":"29","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\actions.ts":"30","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\components\\LocationsActions.tsx":"31","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\Header.tsx":"32","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Footer\\Footer.tsx":"33","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\reducers.ts":"34","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\types.ts":"35","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\AddCategory.tsx":"36","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\EditCategory.tsx":"37","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\DeleteLocation.tsx":"38","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\ViewCategory.tsx":"39","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\AddLocation.tsx":"40","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\DeleteCategory.tsx":"41","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocation.tsx":"42","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocationOnGoogleMaps.tsx":"43","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\EditLocation.tsx":"44"},{"size":1404,"mtime":1613569788243,"results":"45","hashOfConfig":"46"},{"size":425,"mtime":1611738587110,"results":"47","hashOfConfig":"46"},{"size":96,"mtime":1611734921569,"results":"48","hashOfConfig":"46"},{"size":2776,"mtime":1613486744507,"results":"49","hashOfConfig":"46"},{"size":347,"mtime":1613486744495,"results":"50","hashOfConfig":"46"},{"size":1283,"mtime":1614001480967,"results":"51","hashOfConfig":"46"},{"size":6255,"mtime":1613997829581,"results":"52","hashOfConfig":"46"},{"size":1500,"mtime":1614001607528,"results":"53","hashOfConfig":"46"},{"size":1894,"mtime":1614001542733,"results":"54","hashOfConfig":"46"},{"size":840,"mtime":1614001364604,"results":"55","hashOfConfig":"46"},{"size":5373,"mtime":1613998101718,"results":"56","hashOfConfig":"46"},{"size":966,"mtime":1613571921866,"results":"57","hashOfConfig":"46"},{"size":2026,"mtime":1614001791306,"results":"58","hashOfConfig":"46"},{"size":1789,"mtime":1613994177196,"results":"59","hashOfConfig":"46"},{"size":1334,"mtime":1613994177193,"results":"60","hashOfConfig":"46"},{"size":1130,"mtime":1613486744504,"results":"61","hashOfConfig":"46"},{"size":4211,"mtime":1614001706292,"results":"62","hashOfConfig":"46"},{"size":1496,"mtime":1613994177193,"results":"63","hashOfConfig":"46"},{"size":4503,"mtime":1614001727047,"results":"64","hashOfConfig":"46"},{"size":1801,"mtime":1613656854196,"results":"65","hashOfConfig":"46"},{"size":384,"mtime":1613999631450,"results":"66","hashOfConfig":"46"},{"size":1391,"mtime":1614000669931,"results":"67","hashOfConfig":"46"},{"size":1404,"mtime":1613569788243,"results":"68","hashOfConfig":"69"},{"size":425,"mtime":1611738587110,"results":"70","hashOfConfig":"69"},{"size":96,"mtime":1611734921569,"results":"71","hashOfConfig":"69"},{"size":840,"mtime":1614001364604,"results":"72","hashOfConfig":"69"},{"size":5373,"mtime":1613998101718,"results":"73","hashOfConfig":"69"},{"size":2776,"mtime":1613486744507,"results":"74","hashOfConfig":"69"},{"size":347,"mtime":1613486744495,"results":"75","hashOfConfig":"69"},{"size":1283,"mtime":1614001480967,"results":"76","hashOfConfig":"69"},{"size":1391,"mtime":1614000669931,"results":"77","hashOfConfig":"69"},{"size":6255,"mtime":1613997829581,"results":"78","hashOfConfig":"69"},{"size":966,"mtime":1613571921866,"results":"79","hashOfConfig":"69"},{"size":1500,"mtime":1614001607528,"results":"80","hashOfConfig":"69"},{"size":1894,"mtime":1614001542733,"results":"81","hashOfConfig":"69"},{"size":2026,"mtime":1614001791306,"results":"82","hashOfConfig":"69"},{"size":1789,"mtime":1613994177196,"results":"83","hashOfConfig":"69"},{"size":1496,"mtime":1613994177193,"results":"84","hashOfConfig":"69"},{"size":1130,"mtime":1613486744504,"results":"85","hashOfConfig":"69"},{"size":4211,"mtime":1614001706292,"results":"86","hashOfConfig":"69"},{"size":1334,"mtime":1613994177193,"results":"87","hashOfConfig":"69"},{"size":1801,"mtime":1613656854196,"results":"88","hashOfConfig":"69"},{"size":384,"mtime":1613999631450,"results":"89","hashOfConfig":"69"},{"size":4503,"mtime":1614001727047,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1fo5co9",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"1j1iute",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\index.tsx",[],["185","186"],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\reportWebVitals.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\history.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\CategoriesPage\\Categories.tsx",["187"],"import React, { useEffect } from 'react'\r\nimport { ICategory } from '../../type'\r\nimport { setCategories, setCategorySelectedFlag, setCategoryToUpdate } from '../../store/actions'\r\nimport { SystemState } from '../../store/types'\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\r\nimport { Dispatch } from \"redux\"\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport Header from '../Layout/Header/Header'\r\nimport Footer from '../Layout/Footer/Footer'\r\n\r\nconst CategoriesPage: React.FC = () => {\r\n\r\n  const storageCategories = JSON.parse(localStorage.getItem('categories') || '0');\r\n\r\n  useEffect(() => {\r\n    storageCategories !== 0 &&  \r\n      onSetCategories(storageCategories)\r\n  }, [])\r\n\r\n  const dispatch: Dispatch<any> = useDispatch()\r\n\r\n  const onSetCategories = React.useCallback(\r\n    (categories: ICategory[]) => dispatch(setCategories(categories)), [dispatch])\r\n\r\n  const onSetCategoryToUpdate = React.useCallback(\r\n    (category: ICategory) => dispatch(setCategoryToUpdate(category)), [dispatch])\r\n\r\n  const onSetCategorySelectedFlag = React.useCallback(\r\n    (isCategorySelected: boolean) => dispatch(setCategorySelectedFlag(isCategorySelected)), [dispatch])\r\n\r\n  const categoriesState: ICategory[] = \r\n    useSelector((state: SystemState) => state.categories, shallowEqual)\r\n  const categoryToUpdateState: ICategory = \r\n    useSelector((state: SystemState) => state.categoryToUpdate, shallowEqual)\r\n  const categorySelectedFlagState: boolean = \r\n    useSelector((state: SystemState) => state.isCategorySelected, shallowEqual)\r\n\r\n  const handleSelectedCategory = (_id: string) => {\r\n    const selectedCategory: ICategory | any = categoriesState.find(category => category._id ===_id)\r\n    if (selectedCategory === categoryToUpdateState && categorySelectedFlagState) {\r\n      onSetCategorySelectedFlag(false)\r\n    } else {\r\n      onSetCategoryToUpdate(selectedCategory)\r\n      onSetCategorySelectedFlag(true) \r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className='App'>\r\n        <Header title='Categories' page='categories' />\r\n        <ListGroup className='categoriesList'>\r\n        {categoriesState.length ?\r\n          categoriesState.map(category => \r\n            <ListGroup.Item\r\n              className='categoriesListItem'\r\n              onClick={() => handleSelectedCategory(category._id)}\r\n              active={categorySelectedFlagState && categoryToUpdateState._id === category._id}>\r\n              {category.name}\r\n            </ListGroup.Item>) :\r\n          <h3>Seems like you dont have any categories saved yet... {<br></br>}\r\n              Create categories using the add option at the header!\r\n          </h3>\r\n        }\r\n        </ListGroup>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategoriesPage;","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\index.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\actions.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Header.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\reducers.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\types.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\HomePage\\Home.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\Locations.tsx",["188"],"import React, { useEffect, useState } from 'react'\r\nimport { ILocation, ICategory } from '../../type'\r\nimport { setLocations, setLocationSelectedFlag, setLocationToUpdate } from '../../store/actions'\r\nimport { SystemState } from '../../store/types'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport Header from '../Layout/Header/Header'\r\nimport Footer from '../Layout/Footer/Footer'\r\nimport LocationsActions from './components/LocationsActions'\r\nimport './Locations.css'\r\n\r\nconst LocationsPage: React.FC = () => {\r\n\r\n  const [locationsFilteredByCategoryId, setLocationsFilteredByCategoryId] = useState<string>('0')\r\n  const [locationsDisplayGroupedByCategory, setLocationsDisplayGroupedByCategory] = useState(false);\r\n\r\n  const storageLocations = JSON.parse(localStorage.getItem('locations') || '0');\r\n\r\n  useEffect(() => {\r\n    storageLocations !== 0 &&  \r\n      onSetLocations(storageLocations)\r\n  }, [])\r\n\r\n  const dispatch: Dispatch<any> = useDispatch()\r\n\r\n  const onSetLocations = React.useCallback(\r\n    (locations: ILocation[]) => dispatch(setLocations(locations)), [dispatch])\r\n\r\n  const onSetLocationToUpdate = React.useCallback(\r\n    (location: ILocation) => dispatch(setLocationToUpdate(location)), [dispatch])\r\n\r\n  const onSetLocationSelectedFlag = React.useCallback(\r\n    (isLocationSelected: boolean) => dispatch(setLocationSelectedFlag(isLocationSelected)), [dispatch])\r\n\r\n  const locationsState: ILocation[] = useSelector(\r\n    (state: SystemState) => [...state.locations])\r\n  const categoriesState: ICategory[] = useSelector(\r\n    (state: SystemState) => state.categories)\r\n  const locationToUpdateState: ILocation = \r\n  useSelector((state: SystemState) => state.locationToUpdate)\r\n  const locationSelectedFlagState: boolean = \r\n    useSelector((state: SystemState) => state.isLocationSelected)\r\n    \r\n  const handleSelectedLocation = (_id: string) => {\r\n    const selectedLocation: ILocation | any = locationsState.find(location => location._id ===_id)\r\n    if (selectedLocation === locationToUpdateState && locationSelectedFlagState) {\r\n      onSetLocationSelectedFlag(false)\r\n    } else {\r\n      onSetLocationToUpdate(selectedLocation)\r\n      onSetLocationSelectedFlag(true) \r\n    }\r\n  }\r\n\r\n  const handleSortA2Z = (): void => {\r\n    const newLocationsState: ILocation[] = [...locationsState.sort((a, b) => a.name.localeCompare(b.name))]\r\n    onSetLocations(newLocationsState)\r\n  }\r\n\r\n  const handleFilterByCategoryId = (category_id: string): void => {\r\n    let selectedCategoryId: string = category_id\r\n    setLocationsFilteredByCategoryId(selectedCategoryId);\r\n  }\r\n\r\n  const handleDisplayGroupedByCategory = (): void => {\r\n    setLocationsDisplayGroupedByCategory(!locationsDisplayGroupedByCategory);\r\n  }\r\n\r\n  const renderLocationItem = (location: ILocation) => {\r\n    return (\r\n      <ListGroup.Item\r\n        className='locationsListItem'\r\n        onClick={() => handleSelectedLocation(location._id)}\r\n        active={locationSelectedFlagState && locationToUpdateState._id === location._id}>\r\n        {location.name}\r\n      </ListGroup.Item>\r\n    )\r\n  }\r\n\r\n  const renderLocationsdisplay = () => {\r\n    if (locationsState.length)\r\n    { return (<>\r\n        <LocationsActions \r\n          sortA2Z={handleSortA2Z}\r\n          filterByCategoryId={handleFilterByCategoryId}\r\n          displayGroupedByCategoryAction={handleDisplayGroupedByCategory}\r\n          displayGroupedByCategory={locationsDisplayGroupedByCategory}\r\n          categoriesState={categoriesState} />\r\n        { locationsFilteredByCategoryId === '0' && !locationsDisplayGroupedByCategory ?\r\n            locationsState.map(location => renderLocationItem(location)) :\r\n          locationsDisplayGroupedByCategory && locationsFilteredByCategoryId === '0' ?\r\n            <div>\r\n              {categoriesState.map(categoryState => <>\r\n                <h6 className='categoryHeader'>{categoryState.name}</h6>\r\n                {locationsState.map(location => \r\n                  location.category_id.find(categoryId => categoryId === categoryState._id) &&\r\n                  renderLocationItem(location))}\r\n              </>)}</div> \r\n          : <div>\r\n              <h6 className='categoryHeader'>{categoriesState.find(category => category._id === locationsFilteredByCategoryId)?.name}</h6>\r\n              {locationsState.map(location => \r\n                location.category_id.find(categoryId => categoryId === locationsFilteredByCategoryId) &&\r\n                renderLocationItem(location))}\r\n            </div> \r\n          }\r\n      </>)\r\n    } else if (categoriesState.length) {\r\n      return (<h3>Seems like you dont have any locations saved yet... {<br></br>}\r\n        Create locations using the add option at the header!\r\n      </h3>)\r\n    } else {\r\n      return (<h3>Seems like you dont have any categories saved yet... {<br></br>}\r\n        Create categories using the add option at the header on categories page! {<br></br>}\r\n        Then you can create locations :)\r\n      </h3>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className='App'>\r\n        <Header title='Locations' page='locations'/>\r\n        <ListGroup className='locationsList'>\r\n          {renderLocationsdisplay()}\r\n        </ListGroup>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default (LocationsPage);","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Footer\\Footer.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\AddCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\EditCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\DeleteCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\ViewCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\AddLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\DeleteLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\EditLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocationOnGoogleMaps.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\components\\LocationsActions.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\index.tsx",[],["189","190"],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\reportWebVitals.ts",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\history.ts",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\HomePage\\Home.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\Locations.tsx",["191"],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\CategoriesPage\\Categories.tsx",["192"],"import React, { useEffect } from 'react'\r\nimport { ICategory } from '../../type'\r\nimport { setCategories, setCategorySelectedFlag, setCategoryToUpdate } from '../../store/actions'\r\nimport { SystemState } from '../../store/types'\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport Header from '../Layout/Header/Header'\r\nimport Footer from '../Layout/Footer/Footer'\r\n\r\nconst CategoriesPage: React.FC = () => {\r\n\r\n  const storageCategories = JSON.parse(localStorage.getItem('categories') || '0');\r\n\r\n  useEffect(() => {\r\n    storageCategories !== 0 &&  \r\n      onSetCategories(storageCategories)\r\n  }, [])\r\n\r\n  const dispatch: Dispatch<any> = useDispatch()\r\n\r\n  const onSetCategories = React.useCallback(\r\n    (categories: ICategory[]) => dispatch(setCategories(categories)), [dispatch])\r\n\r\n  const onSetCategoryToUpdate = React.useCallback(\r\n    (category: ICategory) => dispatch(setCategoryToUpdate(category)), [dispatch])\r\n\r\n  const onSetCategorySelectedFlag = React.useCallback(\r\n    (isCategorySelected: boolean) => dispatch(setCategorySelectedFlag(isCategorySelected)), [dispatch])\r\n\r\n  const categoriesState: ICategory[] = \r\n    useSelector((state: SystemState) => state.categories, shallowEqual)\r\n  const categoryToUpdateState: ICategory = \r\n    useSelector((state: SystemState) => state.categoryToUpdate, shallowEqual)\r\n  const categorySelectedFlagState: boolean = \r\n    useSelector((state: SystemState) => state.isCategorySelected, shallowEqual)\r\n\r\n  const handleSelectedCategory = (_id: string) => {\r\n    const selectedCategory: ICategory | any = categoriesState.find(category => category._id ===_id)\r\n    if (selectedCategory === categoryToUpdateState && categorySelectedFlagState) {\r\n      onSetCategorySelectedFlag(false)\r\n    } else {\r\n      onSetCategoryToUpdate(selectedCategory)\r\n      onSetCategorySelectedFlag(true) \r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className='App'>\r\n        <Header title='Categories' page='categories' />\r\n        <ListGroup className='categoriesList'>\r\n        {categoriesState.length ?\r\n          categoriesState.map(category => \r\n            <ListGroup.Item\r\n              className='categoriesListItem'\r\n              onClick={() => handleSelectedCategory(category._id)}\r\n              active={categorySelectedFlagState && categoryToUpdateState._id === category._id}>\r\n              {category.name}\r\n            </ListGroup.Item>) :\r\n          <h3>Seems like you dont have any categories saved yet... {<br></br>}\r\n              Create categories using the add option at the header!\r\n          </h3>\r\n        }\r\n        </ListGroup>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategoriesPage;","Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\index.ts",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\actions.ts",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\‏‏LocationsPage\\components\\LocationsActions.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\Header.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Footer\\Footer.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\reducers.ts",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\store\\types.ts",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\AddCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\EditCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\DeleteLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\ViewCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\AddLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\CategoryActions\\DeleteCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocation.tsx",[],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\ViewLocationOnGoogleMaps.tsx",[],["193","194"],"Q:\\user\\Documents\\GitHub\\Welldone.github.io\\client\\src\\components\\Layout\\Header\\LocationActions\\EditLocation.tsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":18,"column":6,"nodeType":"201","endLine":18,"endColumn":8,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"203","line":23,"column":6,"nodeType":"201","endLine":23,"endColumn":8,"suggestions":"204"},{"ruleId":"195","replacedBy":"205"},{"ruleId":"197","replacedBy":"206"},{"ruleId":"199","severity":1,"message":"203","line":23,"column":6,"nodeType":"201","endLine":23,"endColumn":8,"suggestions":"207"},{"ruleId":"199","severity":1,"message":"200","line":18,"column":6,"nodeType":"201","endLine":18,"endColumn":8,"suggestions":"208"},{"ruleId":"195","replacedBy":"209"},{"ruleId":"197","replacedBy":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onSetCategories' and 'storageCategories'. Either include them or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has missing dependencies: 'onSetLocations' and 'storageLocations'. Either include them or remove the dependency array.",["214"],["211"],["212"],["215"],["216"],["211"],["212"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"217","fix":"222"},"Update the dependencies array to be: [onSetCategories, storageCategories]",{"range":"223","text":"224"},"Update the dependencies array to be: [onSetLocations, storageLocations]",{"range":"225","text":"226"},{"range":"227","text":"226"},{"range":"228","text":"224"},[705,707],"[onSetCategories, storageCategories]",[996,998],"[onSetLocations, storageLocations]",[996,998],[705,707]]