[{"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\index.tsx":"1","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\reportWebVitals.ts":"2","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\history.ts":"3","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\MyLocationsPage\\MyLocations.tsx":"4","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\CategoriesPage\\Categories.tsx":"5","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\index.ts":"6","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\actions.ts":"7","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Header.tsx":"8","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\reducers.ts":"9","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\types.ts":"10","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\AddCategory.tsx":"11","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\EditCategory.tsx":"12","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\DeleteCategory.tsx":"13","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\ViewCategory.tsx":"14"},{"size":1132,"mtime":1612087565591,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1611738587110,"results":"17","hashOfConfig":"16"},{"size":96,"mtime":1611734921569,"results":"18","hashOfConfig":"16"},{"size":890,"mtime":1612202605494,"results":"19","hashOfConfig":"16"},{"size":2637,"mtime":1612203878913,"results":"20","hashOfConfig":"16"},{"size":355,"mtime":1611743536556,"results":"21","hashOfConfig":"16"},{"size":698,"mtime":1611743954232,"results":"22","hashOfConfig":"16"},{"size":2971,"mtime":1612203869817,"results":"23","hashOfConfig":"16"},{"size":911,"mtime":1611743868665,"results":"24","hashOfConfig":"16"},{"size":995,"mtime":1612204528365,"results":"25","hashOfConfig":"16"},{"size":1207,"mtime":1612199971411,"results":"26","hashOfConfig":"16"},{"size":1780,"mtime":1612202472120,"results":"27","hashOfConfig":"16"},{"size":1345,"mtime":1612204561932,"results":"28","hashOfConfig":"16"},{"size":1130,"mtime":1612204554316,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fo5co9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\index.tsx",[],["60","61"],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\reportWebVitals.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\history.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\MyLocationsPage\\MyLocations.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\CategoriesPage\\Categories.tsx",["62"],"import React, { useEffect } from 'react'\r\nimport { ICategory } from '../../type'\r\nimport { setCategories, setCategorySelectedFlag, setCategoryToUpdate } from '../../store/actions'\r\nimport { SystemState } from '../../store/types'\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\r\nimport { Dispatch } from \"redux\"\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport Header from '../Layout/Header/Header'\r\n\r\nconst MyLocations: React.FC = () => {\r\n\r\n  const storageCategories = JSON.parse(localStorage.getItem('categories') || '0');\r\n\r\n  useEffect(() => {\r\n    storageCategories !== 0 &&  \r\n      onSetCategories(storageCategories)\r\n  }, [])\r\n\r\n  const dispatch: Dispatch<any> = useDispatch()\r\n\r\n  const onSetCategories = React.useCallback(\r\n    (categories: ICategory[]) => dispatch(setCategories(categories)), [dispatch])\r\n\r\n  const onSetCategoryToUpdate = React.useCallback(\r\n    (category: ICategory) => dispatch(setCategoryToUpdate(category)), [dispatch])\r\n\r\n  const onSetCategorySelectedFlag = React.useCallback(\r\n    (isCategorySelected: boolean) => dispatch(setCategorySelectedFlag(isCategorySelected)), [dispatch])\r\n\r\n  const categoriesState: ICategory[] = \r\n    useSelector((state: SystemState) => state.categories, shallowEqual)\r\n  const categoryToUpdateState: ICategory = \r\n    useSelector((state: SystemState) => state.categoryToUpdate, shallowEqual)\r\n  const categorySelectedFlagState: boolean = \r\n    useSelector((state: SystemState) => state.isCategorySelected, shallowEqual)\r\n\r\n  const handleSelectedCategory = (_id: string) => {\r\n    const selectedCategory: ICategory | any = categoriesState.find(category => category._id ===_id)\r\n    if (selectedCategory === categoryToUpdateState && categorySelectedFlagState) {\r\n      onSetCategorySelectedFlag(false)\r\n    } else {\r\n      onSetCategoryToUpdate(selectedCategory)\r\n      onSetCategorySelectedFlag(true) \r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className='App'>\r\n      <Header title='Categories' />\r\n      <ListGroup className='categoriesList'>\r\n      {categoriesState.length ?\r\n        categoriesState.map(category => \r\n          <ListGroup.Item\r\n            className='categoriesListItem'\r\n            onClick={() => handleSelectedCategory(category._id)}\r\n            active={categorySelectedFlagState && categoryToUpdateState._id === category._id}>\r\n            {category.name}\r\n          </ListGroup.Item>) :\r\n        <h3>Seems like you dont have any categories saved yet... {<br></br>}\r\n            Create categories using the add option at the header!\r\n        </h3>\r\n      }\r\n      </ListGroup>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MyLocations;","Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\index.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\actions.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Header.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\reducers.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\store\\types.ts",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\AddCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\EditCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\DeleteCategory.tsx",[],"Q:\\user\\Documents\\GitHub\\MyLocations-Welldone.github.io\\client\\src\\components\\Layout\\Header\\Actions\\ViewCategory.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":17,"column":6,"nodeType":"69","endLine":17,"endColumn":8,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onSetCategories' and 'storageCategories'. Either include them or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [onSetCategories, storageCategories]",{"range":"76","text":"77"},[656,658],"[onSetCategories, storageCategories]"]